# --------------------------------------------------------------------------
# GENERAL SETTINGS
# --------------------------------------------------------------------------
# mouse mode for resizing
set -g mouse on
# Start numbering at 1
set -g base-index 1
# Allows for faster key repetition
set -s escape-time 0
# resize based on attached client
setw -g aggressive-resize on

# monitor activity
setw -g monitor-activity on
# don't produce messages on activity
set -g visual-activity off
# monitor bells
setw -g monitor-bell on
# only monitor the inactive windows' bells
set -g bell-action other
# show a message instead of passing the bell onto the terminal
set -g visual-bell on

# vi copypaste mode
set-window-option -g mode-keys vi

# default time pane indexes will be shown on display-panes
set -g display-time 1500
set -g display-panes-time 3000

# up the history limit
set -g history-limit 100000
set -g prompt-history-limit 4000

# --------------------------------------------------------------------------
# GENERAL STYLING
# --------------------------------------------------------------------------
# color
set -g default-terminal "tmux-256color"

# main theme color
%hidden THEME_GREEN="#8ec07c"
%hidden PRIMARY="magenta"

# color vars
%hidden STATUS_BG="#0d0d0d"
%hidden ORANGE="#de935f"
%hidden GRAY1="#707880"
%hidden GRAY2="#c5c8c6"
%hidden PINK="#e09ef4"

# auto window rename
set -g set-titles on
set -g set-titles-string 'tmux [#S:#W.#P]' # session_name [window:pane]
set -g automatic-rename on

# pane border display settings
set -g pane-active-border-style fg=yellow,bg=terminal
set -g pane-border-style fg=brightblack,bg=terminal
set -g pane-border-lines single

# pane labels styling
set -g pane-border-status top
set -g pane-border-format "#{pane_index}:#{pane_current_command}"

# pane number display settings (when running display-panes)
set -g display-panes-colour blue
set -g display-panes-active-colour red

# styles for popups
set -g popup-border-style bg=terminal,fg=magenta
# message text
set -g message-style bg=${STATUS_BG},fg=yellow
# clock
set-window-option -g clock-mode-colour ${ORANGE}

# set default width/height to be used in main-vertical/main-horizontal layouts
set-window-option -g main-pane-height 75%
set-window-option -g main-pane-width 65%

# --------------------------------------------------------------------------
# STATUS SECTION STYLING
# --------------------------------------------------------------------------
# re-usable labels
# set the window index color differently based on bell activity
%hidden WINDEXL="#[fg=#{?window_bell_flag,white,$PRIMARY}]#I#[default]"

# labels for status line
%hidden PS_USER="#[fg=white,bold]#{user}#[fg=default,nobold]"
%hidden PS_HOST="#[fg=red,bold]<#h>#[fg=default,nobold,bg=default]"
%hidden PS_SESS="#[fg=yellow,bold]<#S>#[fg=default,nobold]"
%hidden PS_TIME="#[fg=blue]%Y-%m-%d %l:%M %p "

# default style
# set -g status-style bg=${STATUS_BG},fg=white
set -g status-style bg=default,fg=default

# for the active window
set-window-option -g window-status-current-style fg=white,bold,bg=$PRIMARY
set-window-option -g window-status-current-format " #I #W #F"
# for other windows in the list
set-window-option -g window-status-style fg=white,bg=default
set-window-option -g window-status-format " ${WINDEXL} #W #F"
# for windows with bells
set-window-option -g window-status-bell-style fg=red,bold,bg=default
# for windows with activity
set-window-option -g window-status-activity-style fg=magenta,bold,bg=default

# status line
set -g status-interval 5
set -g status-justify left
set -g status-left-length 10
set -g status-right-length 140
set -g status-left " $PS_SESS "
set -g status-right "$PS_HOST | ${PS_TIME}"


# --------------------------------------------------------------------------
# KEY BINDINGS
# --------------------------------------------------------------------------
# C-b is not acceptable -- Vim uses it
set-option -g prefix C-a

# unbind some stuff in case we want it for something else
unbind &    # orig: kill window (confirm first)
unbind %    # orig: split-v
unbind '"'  # orig: split-h
unbind "'"  # orig: prompt for window to select
unbind o    # orig: select the next pane
unbind s    # orig: interactive session selection
unbind w    # orig: interactive window selection
unbind n    # orig: next window
unbind p    # orig: prev window
unbind L    # orig: switch attached client to last session
unbind D    # orig: detach a client from a list
unbind E    # orig: spread panes evenly
unbind t    # orig: display clock
unbind C-o  # orig: rotate through panes
unbind C-Up     # orig: resize up
unbind C-Down   # orig: resize down
unbind C-Left   # orig: resize left
unbind C-Right  # orig: resize right
unbind -T copy-mode-vi v # orig: toggle rectangle

# quickly jump between last pane/window
bind -N "Jump to last selected window" C-a last-window
bind -N "Jump to last selected pane" C-z last-pane

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind a send-prefix

# show tree to select session/window/pane; filter for the current session to start
bind -N "Selection tree"   w choose-window -Z

# fwd/back through windows without prefix key
bind -N "Next window" -n M-. next-window
bind -N "Prev window" -n M-, previous-window
# new window with name
bind C command-prompt -p "Name of new window: " "new-window -n '%%'"
bind -N "Kill window (confirm first)" X confirm-before -p "kill window #W? (y/n)" kill-window
bind -N "Kill pane (confirm first)" x confirm-before -p "kill pane #P? (y/n)" kill-pane

# set window split
bind -N "Split up/down"     v split-window -h -c "#{pane_current_path}"
bind -N "Split left/right"  b split-window -c "#{pane_current_path}"
bind -N "Split up/down"     -n M-v split-window -h -c "#{pane_current_path}"
bind -N "Split left/right"  -n M-b split-window -c "#{pane_current_path}"

# hjkl pane navigation (repeatable)
# bind -r h select-pane -L
# bind -r j select-pane -D
# bind -r k select-pane -U
# bind -r l select-pane -R

# pane navigation without prefix key
bind -N "Focus pane left"   -n M-h select-pane -L
bind -N "Focus pane down"   -n M-j select-pane -D
bind -N "Focus pane up"     -n M-k select-pane -U
bind -N "Focus pane right"  -n M-l select-pane -R

# HJKL pane resizing (repeatable)
bind -N "Resize pane left +5"   -r -n M-H resize-pane -L 5
bind -N "Resize pane down +5"   -r -n M-J resize-pane -D 5
bind -N "Resize pane up +5"     -r -n M-K resize-pane -U 5
bind -N "Resize pane right +5"  -r -n M-L resize-pane -R 5

# swap/move panes without prefix key (Alt-Up/Alt-Down)
bind -N "Swap pane with prev"   -n M-Up swap-pane -U
bind -N "Swap pane with next"   -n M-Down swap-pane -D
# this binding exists by default; we add a note to it to make it a 'documented' binding
bind -N "Swap panes interactively"  S display-panes -d 0 "swap-pane -t '%%'"
bind -N "Swap panes"                s command-prompt { swap-pane -t '%%' }
bind -N "Move pane"                 i command-prompt { move-pane -t '%%' }

# Basic window layouts
bind -N "Layout main-horizontal"    m select-layout main-horizontal
bind -N "Layout main-vertical"      M select-layout main-vertical

# Buffer/copy-mode -related bindings
bind -N "Copy mode"     -n M-Enter copy-mode
bind -N "Paste buffer"  -n M-p paste-buffer -p
bind -N "Select a buffer to paste interactively" V choose-buffer -Z
# rebind in copy-mode-vi to use vim-style select-mode with v
bind -T copy-mode-vi v send-keys -X begin-selection

# popups for shell commands
bind -N "Execute shell command in a pop-up" -n M-e command-prompt -p "run: " { display-popup '%%' }
bind -N "Popup: htop"   T display-popup -E 'htop'

# search for and open an ephemeral pane for a manpage
bind -N "Open manpage in a temp pane" / command-prompt -p "manpage: " { split-window 'exec man %%' }

# reload config
bind -N "Reload config" r source-file ~/.tmux.conf \; display-message "Config reloaded..."

